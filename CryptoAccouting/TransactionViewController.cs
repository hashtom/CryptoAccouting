using Foundation; using System; using UIKit; using CoreGraphics; using Syncfusion.SfDataGrid; using CryptoAccouting.CoreClass; using CryptoAccouting.UIClass; using System.Threading.Tasks;

namespace CryptoAccouting
{
    public partial class TransactionViewController : UIViewController
    {         SfDataGrid sfGrid;         TradeList myTradeList;          public TransactionViewController(IntPtr handle) : base(handle)         {             sfGrid = new SfDataGrid();             //sfGrid.AutoGeneratingColumn += HandleAutoGeneratingColumn;             sfGrid.AllowSorting = true;             sfGrid.AutoGenerateColumns = false;             sfGrid.BackgroundColor = UIColor.FromRGB(236, 184, 138);             //sfGrid.GroupColumnDescriptions.Add(new GroupColumnDescription() { ColumnName = "txid" });              GridTextColumn txIdColumn = new GridTextColumn();             txIdColumn.MappingName = "TxId";             txIdColumn.HeaderText = "tx";              GridTextColumn dateColumn = new GridTextColumn();             dateColumn.MappingName = "TradeDate";             dateColumn.HeaderText = "TDate";              GridTextColumn buysellColumn = new GridTextColumn();             buysellColumn.MappingName = "Side";             buysellColumn.HeaderText = "BuySell";              GridTextColumn amountColumn = new GridTextColumn();             amountColumn.MappingName = "Quantity";             amountColumn.HeaderText = "Qty";              GridTextColumn priceColumn = new GridTextColumn();             priceColumn.MappingName = "TradePrice";             priceColumn.HeaderText = "Price";              GridTextColumn valueColumn = new GridTextColumn();             valueColumn.MappingName = "TradeValue";             valueColumn.HeaderText = "Value";              GridTextColumn bookColumn = new GridTextColumn();             bookColumn.MappingName = "BookPrice";             bookColumn.HeaderText = "Book";              sfGrid.Columns.Add(txIdColumn);             sfGrid.Columns.Add(dateColumn);             sfGrid.Columns.Add(buysellColumn);             sfGrid.Columns.Add(amountColumn);             sfGrid.Columns.Add(priceColumn);             sfGrid.Columns.Add(valueColumn);             sfGrid.Columns.Add(bookColumn);          }          public override void ViewDidLoad()
        {
            base.ViewDidLoad();              NavigationItem.RightBarButtonItem = EditButtonItem;              sfGrid.HeaderRowHeight = 30;             sfGrid.RowHeight = 30;             TransactionView.AddSubview(sfGrid);
        }          public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);              Task.Run(async () =>             {                 await ApplicationCore.LoadTradeListsAsync("Zaif, ", true, false);

                myTradeList = ApplicationCore.GetExchangeTradeList("Zaif");                 //myTradeList.CalculateTotalValue(DateTime.Now.Year, "BTC");                  //Show Grid View                 sfGrid.ItemsSource = (myTradeList.TransactionCollection);
                this.sfGrid.Frame = new CGRect(0,
                                               0, //TransactionSummaryView.Frame.Height + 60,                                            TransactionView.Frame.Width,
                                               TransactionView.Frame.Height); // - TransactionSummaryView.Frame.Height - 70);                                 //TransactionView.AddSubview(sfGrid);             });
        }        //void HandleAutoGeneratingColumn(object sender, AutoGeneratingColumnArgs e)        //{         //  if (e.Column.MappingName == "txid")         //  {       //      e.Column.TextMargin = 1;        //      e.Column.TextAlignment = UITextAlignment.Left;      //  }       //}      } }
